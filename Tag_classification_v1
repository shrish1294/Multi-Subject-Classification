{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":1885658,"sourceType":"datasetVersion","datasetId":1123189}],"dockerImageVersionId":30732,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-16T13:01:14.314219Z","iopub.execute_input":"2024-06-16T13:01:14.314626Z","iopub.status.idle":"2024-06-16T13:01:14.786637Z","shell.execute_reply.started":"2024-06-16T13:01:14.314592Z","shell.execute_reply":"2024-06-16T13:01:14.785570Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/multilabel-classification-dataset/sample_submission.csv\n/kaggle/input/multilabel-classification-dataset/train.csv\n/kaggle/input/multilabel-classification-dataset/test.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/multilabel-classification-dataset/train.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:01:14.856217Z","iopub.execute_input":"2024-06-16T13:01:14.856792Z","iopub.status.idle":"2024-06-16T13:01:15.402144Z","shell.execute_reply.started":"2024-06-16T13:01:14.856756Z","shell.execute_reply":"2024-06-16T13:01:15.401163Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"def preprocess_input(df):\n    \n    def tokenize():\n        pass\n    def stemming():\n        pass\n    \n    def get_id_from_text():\n        pass\n    def get_text_from_id():\n        pass\n        ","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:01:16.030042Z","iopub.execute_input":"2024-06-16T13:01:16.030808Z","iopub.status.idle":"2024-06-16T13:01:16.036323Z","shell.execute_reply.started":"2024-06-16T13:01:16.030771Z","shell.execute_reply":"2024-06-16T13:01:16.035115Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"label_tags = ['Computer Science', 'Physics', 'Mathematics','Statistics', 'Quantitative Biology', 'Quantitative Finance']\nlabel_tags\ninput_tags = ['TITLE', 'ABSTRACT']","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:01:17.515198Z","iopub.execute_input":"2024-06-16T13:01:17.515574Z","iopub.status.idle":"2024-06-16T13:01:17.521391Z","shell.execute_reply.started":"2024-06-16T13:01:17.515545Z","shell.execute_reply":"2024-06-16T13:01:17.519949Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":"**Data Preprocessing**","metadata":{}},{"cell_type":"code","source":"import tensorflow as tf\nimport tensorflow_text as tf_text\nfrom sklearn.model_selection import train_test_split","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:01:20.718395Z","iopub.execute_input":"2024-06-16T13:01:20.718790Z","iopub.status.idle":"2024-06-16T13:01:36.455058Z","shell.execute_reply.started":"2024-06-16T13:01:20.718740Z","shell.execute_reply":"2024-06-16T13:01:36.453791Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stderr","text":"2024-06-16 13:01:22.853666: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-06-16 13:01:22.853812: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-06-16 13:01:23.008100: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}]},{"cell_type":"code","source":"from tensorflow.keras.layers import TextVectorization\nimport re\nimport string\n# Create a custom standardization function to strip HTML break tags '<br />'.\ndef custom_standardization(input_data):\n  lowercase = tf.strings.lower(input_data)\n  stripped_html = tf.strings.regex_replace(lowercase, '<br />', ' ')\n  return tf.strings.regex_replace(stripped_html,\n                                  '[%s]' % re.escape(string.punctuation), '')\n\n\n# Vocabulary size and number of words in a sequence.\n\ndef get_vectorize_layer(vocab_size=10000, sequence_length=100):\n    vectorize_layer = TextVectorization(\n        standardize=custom_standardization,\n        max_tokens=vocab_size,\n        output_mode='int',\n        output_sequence_length=sequence_length)\n    return vectorize_layer\n\ndef get_text_from_tokens(tensor, vocab):\n    text = \"\"\n    for i in tensor.numpy():\n        if vocab[i]:\n            text =text +  f\" {vocab[i]}\"\n\n    return text\n        \n    ","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:01:42.169393Z","iopub.execute_input":"2024-06-16T13:01:42.169929Z","iopub.status.idle":"2024-06-16T13:01:42.182488Z","shell.execute_reply.started":"2024-06-16T13:01:42.169869Z","shell.execute_reply":"2024-06-16T13:01:42.180960Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"def get_labels(df, tags):\n    labels = []\n    for i, row in df.iterrows():\n        encode = [row[j] for j in tags]\n        labels.append(encode)\n    return labels\n\ndef get_train_val_input_data(df, label_cols):\n    train_data, valid_data = train_test_split(df, train_size=0.8, shuffle=True)\n    train_title_data = list(train_data['TITLE'])\n    train_abstract_data = list(train_data['ABSTRACT'])\n    valid_title_data = list(valid_data['TITLE'])\n    valid_abstract_data = list(valid_data['ABSTRACT'])\n    train_labels = get_labels(train_data, label_cols)\n    valid_labels = get_labels(valid_data, label_cols)\n    input_data = {\n        'train_data' : (train_title_data, train_abstract_data),\n        'train_label' : train_labels,\n        'valid_data' : (valid_title_data, valid_abstract_data),\n        'valid_label': valid_labels\n    }\n    return input_data","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:01:45.805488Z","iopub.execute_input":"2024-06-16T13:01:45.805928Z","iopub.status.idle":"2024-06-16T13:01:45.815617Z","shell.execute_reply.started":"2024-06-16T13:01:45.805870Z","shell.execute_reply":"2024-06-16T13:01:45.814418Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"def get_dataset(input_data, labels, title_vectorize_layer, abstract_vectorize_layer, batch_size=32):\n    dataset = tf.data.Dataset.from_tensor_slices((input_data, labels)).map(lambda x,y : ((title_vectorize_layer(x[0]), abstract_vectorize_layer(x[1])), y)).batch(batch_size)\n    return dataset","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:01:52.768108Z","iopub.execute_input":"2024-06-16T13:01:52.769081Z","iopub.status.idle":"2024-06-16T13:01:52.775773Z","shell.execute_reply.started":"2024-06-16T13:01:52.769038Z","shell.execute_reply":"2024-06-16T13:01:52.774483Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"title_vectorize_layer = get_vectorize_layer(50000)\nabstract_vectorize_layer = get_vectorize_layer(50000 ,sequence_length=200)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:02:04.241141Z","iopub.execute_input":"2024-06-16T13:02:04.242245Z","iopub.status.idle":"2024-06-16T13:02:04.295944Z","shell.execute_reply.started":"2024-06-16T13:02:04.242202Z","shell.execute_reply":"2024-06-16T13:02:04.294660Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"title_vectorize_layer.adapt(list(df['TITLE']))","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:02:05.460574Z","iopub.execute_input":"2024-06-16T13:02:05.461008Z","iopub.status.idle":"2024-06-16T13:02:05.717912Z","shell.execute_reply.started":"2024-06-16T13:02:05.460973Z","shell.execute_reply":"2024-06-16T13:02:05.716676Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"abstract_vectorize_layer.adapt(list(df['ABSTRACT']))","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:02:07.169557Z","iopub.execute_input":"2024-06-16T13:02:07.169987Z","iopub.status.idle":"2024-06-16T13:02:08.737699Z","shell.execute_reply.started":"2024-06-16T13:02:07.169953Z","shell.execute_reply":"2024-06-16T13:02:08.736383Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"#check sample representation : \ntitle_vectorize_layer(df['TITLE'][400])","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:02:08.958127Z","iopub.execute_input":"2024-06-16T13:02:08.958513Z","iopub.status.idle":"2024-06-16T13:02:09.003662Z","shell.execute_reply.started":"2024-06-16T13:02:08.958484Z","shell.execute_reply":"2024-06-16T13:02:09.002497Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"<tf.Tensor: shape=(100,), dtype=int64, numpy=\narray([   17, 10177,   471,    20,     5,    61,   895,   179,    11,\n           0,     0,     0,     0,     0,     0,     0,     0,     0,\n           0,     0,     0,     0,     0,     0,     0,     0,     0,\n           0,     0,     0,     0,     0,     0,     0,     0,     0,\n           0,     0,     0,     0,     0,     0,     0,     0,     0,\n           0,     0,     0,     0,     0,     0,     0,     0,     0,\n           0,     0,     0,     0,     0,     0,     0,     0,     0,\n           0,     0,     0,     0,     0,     0,     0,     0,     0,\n           0,     0,     0,     0,     0,     0,     0,     0,     0,\n           0,     0,     0,     0,     0,     0,     0,     0,     0,\n           0,     0,     0,     0,     0,     0,     0,     0,     0,\n           0])>"},"metadata":{}}]},{"cell_type":"code","source":"input_data = get_train_val_input_data(df, label_tags)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:02:15.846735Z","iopub.execute_input":"2024-06-16T13:02:15.847174Z","iopub.status.idle":"2024-06-16T13:02:17.746592Z","shell.execute_reply.started":"2024-06-16T13:02:15.847140Z","shell.execute_reply":"2024-06-16T13:02:17.745550Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"train_data = get_dataset(input_data['train_data'], input_data['train_label'], title_vectorize_layer, abstract_vectorize_layer, 64)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:02:28.094442Z","iopub.execute_input":"2024-06-16T13:02:28.094858Z","iopub.status.idle":"2024-06-16T13:02:29.075363Z","shell.execute_reply.started":"2024-06-16T13:02:28.094824Z","shell.execute_reply":"2024-06-16T13:02:29.074162Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"valid_data = get_dataset(input_data['valid_data'], input_data['valid_label'], title_vectorize_layer, abstract_vectorize_layer, 64)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:02:30.109106Z","iopub.execute_input":"2024-06-16T13:02:30.109604Z","iopub.status.idle":"2024-06-16T13:02:30.498759Z","shell.execute_reply.started":"2024-06-16T13:02:30.109564Z","shell.execute_reply":"2024-06-16T13:02:30.497758Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def get_model():\n    input1, input2= tf.keras.layers.Input(shape=(100, ), name='title_input'), tf.keras.layers.Input(shape=(200, ), name='abstract_input')\n#     inputs = tf.keras.layers.Concatenate(axis=-1, name='concatenate_layer')([input1, input2])\n    title_embs = tf.keras.layers.Embedding(50000, 64, name='title_embedding_layer')(input1)\n    abstract_embs = tf.keras.layers.Embedding(50000, 64, name='abstract_embedding_layer')(input2)\n#     out = tf.keras.layers.GlobalAveragePooling1D()(embs)\n    title_lstm = tf.keras.layers.LSTM(6, return_sequences=False, return_state=False)\n    abstract_lstm = tf.keras.layers.LSTM(6, return_sequences=False, return_state=False)\n    title_whole_seq_output = title_lstm(title_embs)\n    abstract_whole_seq_output = abstract_lstm(abstract_embs)\n    merge_layer = tf.keras.layers.Add()([title_whole_seq_output, abstract_whole_seq_output])\n    outs = tf.keras.layers.Dense(6, activation='sigmoid')(merge_layer)\n    \n    return tf.keras.Model((input1, input2), outs)\n    \ndef predict(model, title, abstract):\n    title = title_vectorize_layer(title)\n#     title = tf.expand_dims(title, 0)\n    \n    abstract = abstract_vectorize_layer(abstract)\n#     abstract = tf.expand_dims(abstract, 0)\n    print(title.get_shape(), abstract.get_shape())\n    resp = model.predict((title, abstract))\n    return resp\n","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:02:35.769499Z","iopub.execute_input":"2024-06-16T13:02:35.769882Z","iopub.status.idle":"2024-06-16T13:02:35.781050Z","shell.execute_reply.started":"2024-06-16T13:02:35.769853Z","shell.execute_reply":"2024-06-16T13:02:35.779855Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"model = get_model()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:02:39.442198Z","iopub.execute_input":"2024-06-16T13:02:39.442653Z","iopub.status.idle":"2024-06-16T13:02:39.571138Z","shell.execute_reply.started":"2024-06-16T13:02:39.442617Z","shell.execute_reply":"2024-06-16T13:02:39.569944Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:02:40.793482Z","iopub.execute_input":"2024-06-16T13:02:40.793918Z","iopub.status.idle":"2024-06-16T13:02:40.809667Z","shell.execute_reply.started":"2024-06-16T13:02:40.793863Z","shell.execute_reply":"2024-06-16T13:02:40.808631Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"model.summary()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:02:42.368938Z","iopub.execute_input":"2024-06-16T13:02:42.369313Z","iopub.status.idle":"2024-06-16T13:02:42.401561Z","shell.execute_reply.started":"2024-06-16T13:02:42.369283Z","shell.execute_reply":"2024-06-16T13:02:42.400500Z"},"trusted":true},"execution_count":23,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"functional_1\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional_1\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)       \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape     \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m   Param #\u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mConnected to     \u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩\n│ title_input         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)       │          \u001b[38;5;34m0\u001b[0m │ -                 │\n│ (\u001b[38;5;33mInputLayer\u001b[0m)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ abstract_input      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m200\u001b[0m)       │          \u001b[38;5;34m0\u001b[0m │ -                 │\n│ (\u001b[38;5;33mInputLayer\u001b[0m)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ title_embedding_la… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m64\u001b[0m)   │  \u001b[38;5;34m3,200,000\u001b[0m │ title_input[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m] │\n│ (\u001b[38;5;33mEmbedding\u001b[0m)         │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ abstract_embedding… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m200\u001b[0m, \u001b[38;5;34m64\u001b[0m)   │  \u001b[38;5;34m3,200,000\u001b[0m │ abstract_input[\u001b[38;5;34m0\u001b[0m… │\n│ (\u001b[38;5;33mEmbedding\u001b[0m)         │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ lstm (\u001b[38;5;33mLSTM\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m6\u001b[0m)         │      \u001b[38;5;34m1,704\u001b[0m │ title_embedding_… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ lstm_1 (\u001b[38;5;33mLSTM\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m6\u001b[0m)         │      \u001b[38;5;34m1,704\u001b[0m │ abstract_embeddi… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ add (\u001b[38;5;33mAdd\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m6\u001b[0m)         │          \u001b[38;5;34m0\u001b[0m │ lstm[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m],       │\n│                     │                   │            │ lstm_1[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]      │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense (\u001b[38;5;33mDense\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m6\u001b[0m)         │         \u001b[38;5;34m42\u001b[0m │ add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]         │\n└─────────────────────┴───────────────────┴────────────┴───────────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)        </span>┃<span style=\"font-weight: bold\"> Output Shape      </span>┃<span style=\"font-weight: bold\">    Param # </span>┃<span style=\"font-weight: bold\"> Connected to      </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩\n│ title_input         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)       │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ -                 │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ abstract_input      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">200</span>)       │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ -                 │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ title_embedding_la… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)   │  <span style=\"color: #00af00; text-decoration-color: #00af00\">3,200,000</span> │ title_input[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>] │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)         │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ abstract_embedding… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">200</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)   │  <span style=\"color: #00af00; text-decoration-color: #00af00\">3,200,000</span> │ abstract_input[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)         │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ lstm (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">6</span>)         │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,704</span> │ title_embedding_… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ lstm_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">6</span>)         │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,704</span> │ abstract_embeddi… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ add (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Add</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">6</span>)         │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ lstm[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>],       │\n│                     │                   │            │ lstm_1[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]      │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">6</span>)         │         <span style=\"color: #00af00; text-decoration-color: #00af00\">42</span> │ add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]         │\n└─────────────────────┴───────────────────┴────────────┴───────────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m6,403,450\u001b[0m (24.43 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">6,403,450</span> (24.43 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m6,403,450\u001b[0m (24.43 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">6,403,450</span> (24.43 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"tf.keras.utils.plot_model(model)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:21:39.307879Z","iopub.execute_input":"2024-06-16T13:21:39.308343Z","iopub.status.idle":"2024-06-16T13:21:39.608575Z","shell.execute_reply.started":"2024-06-16T13:21:39.308309Z","shell.execute_reply":"2024-06-16T13:21:39.607372Z"},"trusted":true},"execution_count":52,"outputs":[{"execution_count":52,"output_type":"execute_result","data":{"image/png":"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vfZa1j45OTkxcODAGDhwYFx55ZWxYcOGeOmll2LhwoXxySefxKpVqyIvLy86d+4c/fv3j1133bXMdR944IFK1Vufbd68OSZPnhz77LPPV66vXLkyXnzxxTqqCurO+PHjK3Vqz7Jly8p1nG/37t3j3HPPjXPPPTe2bNkSr7/+erz++uvxySefxMqVK6OkpCS233776N27d+yzzz5lvpnxz3/+s9wnhjUkv/rVr+L111/f6vott9xSB9VA1QgEkMHn7+RXxrx588oMBF/XrFmzLwJCZSxbtiymTp1aqbH13QMPPNAoww5UxtFHH12pcfPnz6/Q8z0iIpo0aRK9evWKXr16VWrNiIiLLrqo0mPrs/nz58f8+fPrugyoFrYMQSNx5plnOvMaqFduvvnmRrddCBojgQAagXPOOSduv/32ui4D4AszZsyIk046qa7LAMpBIIBadPbZZ8ef//znWLVqVbXMt3DhwjjooIPiiiuuqJb5gPTceOONcfXVV5f5jJPyWrduXZx++ukxevTojCfxAPWLewigFs2cOTNmzpwZ22yzTQwZMiSGDh0aQ4YMiX322SfatGlTrjnWr18fTzzxRNx2221x3333xcaNG2u4aqAxe+211+LMM8+MM888M/r27Rv7779/DBkyJAYOHBidO3cu1xybN2+OuXPnxl/+8peYNm1aozv+GBo7gYBkzZo1Ky688MIambusG4qLiori8ccfj8cff/yLax06dIju3btHt27dok2bNtGyZcvIz8+PTz/9NNauXRsff/xxzJ8/PxYsWBDFxcXVWu+qVavK/F6U9eChskybNi1eeOGFrDVUpylTpkRhYWGpbd61pD77zW9+U+UHGJamrKfrRvzfwwBfeumluOaaayIiolWrVtGjR4/YaaedYrvttouWLVtG8+bNY+PGjbF27dpYtWpVLFiwIObNm1cjb05cc8010bZt24ztc+fOrdL8Zf0eeOmll6o0/9f9/e9/j6VLl2Zs/+CDD6p1PSivnBKH5VIDGtNj6qGuTJkyJU499dS6LqPROP300794oQtUzk477RRvv/12XZdB9brEPQQAAJAwgQAAABImEAAAQMIEAgAASJhAAAAACRMIAAAgYQIBAAAkTCAAAICECQQAAJAwgQAAABImEAAAQMIEAgAASJhAAAAACRMIAAAgYQIBAAAkTCAAAICECQQAAJAwgQAAABImEAAAQMIEAgAASJhAAAAACRMIAAAgYQIBAAAkTCAAAICECQQAAJAwgQAAABImEAAAQMIEAgAASJhAAAAACRMIAAAgYQIBAAAkTCAAAICECQQAAJAwgQAAABImEAAAQMIEAgAASJhAAAAACRMIAAAgYQIBAAAkTCAAAICECQQAAJAwgQAAABImEAAAQMIEAgAASJhAAAAACRMIAAAgYQIBAAAkTCAAAICECQQAAJAwgQAAABKWV9cF0DideOKJdV0CVMr7778fjz766FbXDz744OjUqVOt1rL77rvX6nqN3YABA8r1s+nee++NlStXfuXaDjvsECNHjqyp0qDBaN++fV2XQA3IKSkpKanrIgDqixkzZsQRRxyx1fXHH3889t9//9oviFrXq1evmD9//leujRw5Mh5++OE6qgigRl1iyxAAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkLC8ui4AoKZt2bIl1qxZU66+69atK/X62rVrY+XKleWao02bNpGb6/2W+mTdunVRVFRUrr5btmzZ6lpRUVG5//3z8/OjefPmFaoPoC7llJSUlNR1EQA1aePGjdGxY8dYtWpVja/VqVOnWLRoUTRp0qTG16L8LrzwwrjgggtqZa2bb745TjzxxFpZC6AaXOItLKDRy8/Pj9GjR9fKWuPGjRMG6qGJEyfWyjr5+flx1FFH1cpaANVFIACSMGHChEa1DhXTo0eP+Na3vlXj6xx88MHRtm3bGl8HoDoJBEAShg0bFp07d67RNXbeeefo379/ja5B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Opn07t079txzz+jcuXNs2rQpFi9eHK+88kqNHV8KQMUIBADVLCcnJ4477riM7fPnz4/Vq1fHoEGDSm0/5phj4txzz43NmzdXqY6WLVvG+eefH9/73vdKvVl58+bN8cgjj8Tll18eTz75ZJXW+rqcnJz44Q9/GGeccUbsuuuupfb597//Hdddd13ceuutUVxcXK3rA1B+tgwBVLOhQ4fGN7/5zYzt06ZNi2nTpmVs79ChQ4wcObJKNfTv3z/mz58fZ599dsaTi/Ly8uKQQw6JJ554Iq699tpo0qRJldb8XLt27eKpp56KqVOnZgwDERF777133HzzzfHoo486XQmgDgkEANWsrBuD77zzzrjnnnuyfgJQlZuL991335g5c2Z07dq13GN+9KMfxR133BG5uVX7tdCuXbv45z//WaH7Jw444IB48sknhQKAOiIQAFSj5s2bx5gxYzK2P/vss/HOO+/EsmXL4rHHHsvYb9SoUVFQUFDh9QsLC2PGjBnRunXrCo8dO3ZsnHHGGRUe97mcnJy44447olevXhUe27Nnz7jlllsqvTYAlScQAFSjo446Klq1apWx/Y477ij1f39dfn5+jB8/vsLrT5kyJdq3b1/hcZ/bYYcdKj128uTJMWzYsDpZG4DKc1MxQDXKttVny5Ytcffdd3/x93vvvTduuOGGaNq0aca5rr/++nKv3atXrzj66KPL7Ldw4cKYOXNmrFixIgoLC2P48OFZ73koj2222SbOP//8MvutWrUqHn744Vi4cGE0b948Bg4cGPvss0+V1gagagQCgGrSpUuXOPDAAzO2P/7447F06dIv/r5mzZp44IEH4rvf/W6p/ffdd9/Ydddd48033yzX+qeeemqZfX7605/GlVdeGVu2bPniWm5ubpx55plx2WWXRU5OTrnW+rqjjjoqOnXqlLXPPffcEz/84Q9j9erVX7k+YsSIuPvuu6NNmzaVWhuAqrFlCKCaHHfccVlvyi1ti1C2bUMRFbu5OFOw+NzVV18dl1122VfCQEREcXFxXHHFFXHllVeWe62vy3bfRETE888/HxMmTNgqDEREPPLIIzFx4sRKrw1A1QgEANUk28PINm7cGNOnT9/q+gMPPBBr1qzJOK6skPG5Hj16ZD2lZ+PGjXHRRRdlnePiiy+ODRs2lLlWaQYOHJi1/fzzz98qiHzZgw8+GLNmzarU2gBUjUAAUA323Xff2G233TK2P/TQQ7Fq1aqtrn/22Wdx7733ZhxX1jakz/Xr1y9r+5NPPlnq+l+2Zs2aeOKJJ8pc6+vat2+f9YbgTz/9NGbOnFnmPH/7298qvDYAVScQAFSDsrb2ZNsaVB3bhgoLC7O2v/rqq2XOUZF+FVn79ddfz/rpQFXWBqDqBAKAKirriNB169bF/fffn7H90UcfjWXLlmVsL+so04go85kFn3zySdb2ivarL2sDUHVOGQKoosMPPzzri+Jly5bFueeem3WOFStWZHx+QPPmzWPs2LHxxz/+MeP4yp4OVB3z1OXaAFSdQABQRWVt6dlpp53il7/8ZZXXyBYIynp3fbvttivXOpV5OnJdrg1A1dkyBFAF7du3j4MOOqjG19lvv/2yPjxsxYoVWcfvueee5VqnvP0qsnbPnj2jSZMmNbI2AFUnEABUwTHHHBN5eTX/YWtOTk7WY01ffPHFrOOHDh1a5oO/WrduHfvvv3+Fa1u2bFksXrw4Y3vz5s1j+PDhZc4zatSoCq8NQNUJBABVUJEHh1XV8ccfn3Gf/YIFC7LemNy0adP4+c9/nnX+n/3sZ9GsWbNK1VbWMwQuuOCCrJ8SjBw5MgYPHlyptQGoGoEAoJL69OkTffr0qbX1dtpppxgyZEjG9mzPM4iIOOuss+Kss87a6kFnubm5ccYZZ5R543M2pT107csGDBgQt99+e7Ru3XqrtuHDh8edd95Z6bUBqBo3FQNUUlmfDjzxxBPx5JNPVmjOffbZJw455JCsa/7rX/8qtW3KlCkxefLkjGNzcnLiiiuuiFNOOSVmzpwZK1asiMLCwhg+fHjstNNOFarz6/7617/G0qVLo2PHjhn7jB8/PkaOHBkPPfRQvPfee9G8efMYMGBA7LvvvlVaG4CqEQgAKiEvLy8mTpyYtc8vfvGLePrppys0b8+ePbMGgrFjx8Zpp50WGzZs2Kpt3rx5cdddd8XRRx+ddY1vfvObMWnSpArVVZaioqK48MIL4/rrr8/ar6CgoMzvGwC1y5YhgEo46KCDokOHDhnbP/jgg3jmmWcqPO/rr78e8+bNy9jeunXrOOqoozK2/7//9/+y3ktQliVLllR67NSpU+Oxxx6rk7UBqDyBAKASytoudPfdd0dJSUml5r7rrrsqvfaKFSti1KhRsWbNmgqve99998XVV19d4XGfKykpiQkTJmQNNJksWLAgTjzxxEqvDUDlCQQAFVRQUBCHH3541j5lvaivythhw4ZFly5dMrbPmTMnRowYEe+//36517zpppti7NixsWXLlnKPKc3y5cvjwAMPrNBWqdmzZ8fQoUPjo48+qtLaAFSOQABQQePHj4/8/PyM7e+++24899xzlZ5/wYIF8dJLL2Vsz83NjWOPPTbrHHPmzIk99tgjrrjiiowPDisuLo7HH388DjnkkJg0aVJs3ry50jV/2fLly2Po0KFx0kknxX/+85+M/ebPnx+nnXZaDB06NJYuXVotawNQcW4qBqiglStXxoUXXpixfe7cuVVe46c//WkMHDgwY3t5XkCvW7cuzjnnnDjvvPNi8ODBsfPOO0eHDh1i9erVsWTJkpgzZ058+OGHXxnz7LPPZv3asr3A/7KSkpKYOnVqTJ06Nfr06RN77rlndOrUKTZv3hxLliyJefNQ4YRVAAAYvUlEQVTmxfz587f6mrKtXdazDgConJySym5yBahhl1xySZx33nl1XQaU21VXXRVnnHFGXZcBUBGX2DIEAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBheXVdAEAmO+ywQ+y77751XUajMW/evFi/fv1XrrVq1Sp23333Oqqo8enUqVNdlwBQYTklJSUldV0EADWvf//+8fzzz3/l2n777RdPPfVUHVUEQD1wiS1DAACQMIEAAAASJhAAAEDCBAIAAEiYQAAAAAkTCAAAIGECAQAAJEwgAACAhAkEAACQMIEAAAASJhAAAEDCBAIAAEiYQAAAAAkTCAAAIGECAQAAJEwgAACAhAkEAACQMIEAAAASJhAAAEDCBAIAAEiYQAAAAAkTCAAAIGECAQAAJEwgAACAhAkEAACQMIEAAAASJhAAAEDCBAIAAEiYQAAAAAkTCAAAIGECAQAAJEwgAACAhAkEAACQMIEAAAASJhAAAEDCBAIAAEiYQAAAAAkTCAAAIGECAQAAJEwgAACAhAkEAACQMIEAAAASJhAAAEDCBAIAAEiYQAAAAAkTCAAAIGECAQAAJEwgAACAhAkEAACQMIEAAAASJhAAAEDCBAIAAEiYQAAAAAkTCAAAIGECAQAAJEwgAACAhAkEAACQMIEAAAASJhAAAEDCBAIAAEhYTklJSUldFwFA5UyZMiV++9vflqvv4sWLY+PGjV+51rRp0+jcuXO5xp977rkxadKkCtcIQL12iUAA0IC98cYb0bNnz1pZa8GCBdG9e/daWQuAWnOJLUMADdhuu+0Wffv2rfF19t13X2EAoJESCAAauAkTJtT4GhMnTqzxNQCoG7YMATRwixYtih133DGKi4trZP7c3NxYtGhRue81AKBBsWUIoKH7xje+EYMHD66x+Q888EBhAKAREwgAGoGa3DZkuxBA42bLEEAjsGLFiujcuXMUFRVV67z5+fmxdOnSaNu2bbXOC0C9YcsQQGNQWFgYw4cPr/Z5Dz30UGEAoJETCAAaiZrYNlQbJxgBULdsGQJoJNavXx8dOnSI9evXV8t8rVq1io8++iiaNWtWLfMBUC/ZMgTQWLRo0SIOPfTQaptv9OjRwgBAAgQCgEakOrf42C4EkAZbhgAakU2bNkWnTp3ik08+qdI87dq1iyVLlkReXl41VQZAPWXLEEBjsu2228bo0aOrPM+4ceOEAYBECAQAjUx1bPWxXQggHbYMATQyxcXF0bVr11i8eHGlxnft2jUWLlwYOTk51VwZAPWQLUMAjU1ubm6MHTu20uMnTpwoDAAkRCAAaISqsuXHdiGAtAgEAI1Q//79o0ePHhUe17Nnz+jdu3cNVARAfSUQADRSRx99dIXHHHPMMTVQCQD1mUAA0EhV5sV9ZUIEAA2bQADQSO22227Rt2/fcvffd999o3v37jVYEQD1kUAA0IiNHz++3H0nTpxYg5UAUF95DgFAI7Zo0aLYcccdo7i4OGu/3NzcWLRoUXTu3LmWKgOgnvAcAoDG7Bvf+EYMGjSozH7Dhg0TBgASJRAANHLlea6AZw8ApMuWIYBGbsWKFdG5c+coKioqtT0/Pz+WLl0abdu2reXKAKgHbBkCaOwKCwtj+PDhGdsPPfRQYQAgYQIBQAKybQmqyElEADQ+tgwBJGDt2rXRoUOH2LBhw1eut2rVKj766KNo1qxZHVUGQB2zZQggBa1atYrDDz98q+ujR48WBgASJxAAJKK0bUNOFwLAliGARGzatCk6deoUn3zySUREtGvXLpYsWRJ5eXl1XBkAdciWIYBUbLvttnHkkUd+8fdx48YJAwDYMgSQki9vEbJdCIAIW4YAklJcXBxdu3aNJk2axMKFCyMnJ6euSwKgbl3is2KAhOTm5saYMWOiWbNmwgAAEREhEADl9s4778RHH31U12VQRb169Yr8/PyYPXt2XZdCFXXq1Cl23HHHui4DaOAEAqDcLrvssrjxxhvrugzgv0477bT43e9+V9dlAA2cm4oBACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgITl1XUBANVtv/32iyZNmmRsLykpic2bN0dRUVEUFRXFZ599FitXroyVK1fGxo0ba7FSAKh7AgHQ6Dz00EPRokWLSo1dvXp1vPPOO/HWW2/F888/H08//XTMmTMniouLq7lKAKgfBAKAL2nTpk3069cv+vXrF2PHjo2IiA8++CD+9Kc/xTXXXBMrVqyo4woBoHq5hwCgDF26dImf//znsXDhwjjrrLMiN9ePTgAaD7/VAMqpRYsWccUVV8Rjjz0W2223XV2XAwDVQiAAqKD9998/Zs+eHR07dqzrUgCgytxDACRn/vz5X9wLkJeXFwUFBbH99ttHhw4dyj3HLrvsEg8//HAMGjQoPv3005oqFQBqnEAAJOd//ud/4r777tvqeqdOnWLIkCFx4oknxsiRIyMnJyfrPH369IkpU6bEiSeeWOWamjRpEttvv31sv/32UVBQEOvXr4/ly5fH8uXLo6ioqMrzl1dOTk506NAhunTpEsXFxbF8+fJYtGhRtc3frFmz6NKlS7Rs2TJatGgRn332WaxevTrWrFkTa9asiQ0bNlTbWl/WsmXLKCwsjO222y7y8/NjxYoVsXz58li1alWNrAfQkAgEAP/14Ycfxj333BP33HNP7LXXXnHHHXfELrvsknXM97///bj11lvjqaeeqvB63bp1i+OPPz6GDh0aAwcOLPWo1I0bN8asWbNi5syZ8cc//jE++uijcs+/9957R6tWrUpt27hxY8yePfuLv3/rW9+KH/zgBzF27Nit7o9YsmRJ/O1vf4vf/OY38cEHH5R7/Yj/CzqHH354jB49OoYMGRI77rhj1puy169fH++99168++678dprr8X8+fNjxowZsXLlygqve8QRR8QhhxwS++23X8Z/x/feey8effTRmD59ejz44IMVWgOg0SgBKKdJkyaVRES9/7Nu3bqsX8eRRx5ZrnlatmxZMmvWrDK/L08++WSF6ttpp51Kpk2bVlJUVFSh7//69etLLr/88pIWLVqUa50XXngh41wffPBBSUSUtGjRouTmm28uKS4uLtf6Y8eOLffXuf/++5e89tprFfoaS7P//vuXe82cnJySSZMmlbz99tsVXue5556r0Fr14c9pp51W5e8vkLzfuKkYIIN169bFUUcdFR9++GHWfkOHDo0999yzXHOOGTMmXnzxxZgwYULk5VXsQ9rmzZvH2WefHbNmzYodd9yxQmNL0759+3j66afjxBNPLHN71Ofr33HHHXHYYYeV2ffII4+Mf/zjH9GzZ88q11le2223XcyYMSOmTp0aO+20U4XH77PPPvHYY4/F2WefXQPVAdRfAgFAFkuXLo1f//rXZfb7/CFm2Zx88slxzz33ROvWratUU+/eveO5556Lbt26VXqOpk2bxiOPPBJ9+/at0LgmTZrEjTfeGG3atMnYp0OHDnHLLbfEtttuW+n6Kqpt27bxzDPPlCusZJObmxuXX355XHbZZdVUGUD9JxAAlOEPf/hDrF69Omuf/fffP2v7iBEj4ne/+12Za7333nsxe/bseO2116KkpCRjv3bt2sW9994bzZo1K3PO0my//fbRp0+fSo3t1KlTnHDCCRnbJ02aFG3bts3YXlxcHG+//XbMnj37i6/1448/rlQtERHbbLNN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n/4ANHYCAZCc6nrX98c//nE89thjZfabO3du3HnnnTFhwoRS21u3bh3Tp0+Pl156KWbMmBHz58+PlStXxrbbbhvbb799dOnSJfr37x8DBgwo86m69cUee+wRl19+eVx++eWxdOnSePbZZ+PNN9+Mt956K1auXBlr166NLVu2xPbbbx99+vSJ4447Lr7xjW9knO+pp57K2HbeeefFyJEjY9ttty21ffTo0fGd73wn7rvvvpg1a1YsWrQoPvvssygoKIjCwsLYY489YsCAAdGnT58Guf0KoKr85AOooC1btsRPfvKTmDJlSrnHTJo0KXbdddfYa6+9Mvbp27dvlfe810cdO3aMI488stLjN2zYEH/5y18yts+bNy++//3vx+23317qpzAR//cJxLHHHhvHHntspesAaKzcQwBQAR988EEcfPDBFQoDERHr1q2Lww47LF588cUaqqzxOuecc+L999/P2mfatGnxox/9KIqKimqpKoDGQyAAKIe1a9fGZZddFnvssUfMnDmzUnN8+OGHMWDAgLj66qur9NCvL1uxYkWjfRFcVFQUp512WrnD15QpU2LIkCHx1ltvVcv6JSUlsXTp0mqZC6A+EwgAMli3bl3MnDkzJk+eHF27do2f/vSnVX4A2KZNm+LMM8+MHj16xDXXXBOrV6+u0Pji4uJ4+eWX49prr40DDjggOnbsWOE5atrChQtj2bJllR6/Zs2auPXWW2O33Xar8Ccxzz33XPTs2TMmTJgQs2fPrvDaH3/8cdx///1xyimnxA477BAXX3xxhecAaGjcQwA0Ov/617+iWbNmGdtLSkqiuLg4ioqKoqioKDZs2BArV66MlStXxtKlS+Pdd9+Nt99+O15//fXYsmVLjdT4zjvvxOmnnx5nnXVW9O7dOwYNGhS77bZbFBQUREFBQeTn58f69etj7dq18eGHH8Zbb70VCxYsiBdeeKHcoeTf//53xhOQli9fXub4ZcuWxZNPPpmx/cMPPyz1+sUXXxwXX3xxtGrVKnr06BE9evSInXfeOQoKCqJVq1Zf/GnRokVs3Lgx1q1bF8uXL48333wzXnnllXjmmWeq9KnH5s2b484774w777wzCgsLY9CgQdG/f//o2LFjFBQUROvWraOoqCjWr18fK1eu/OLf+9VXX4033ngjSkpKKr02QEOUU+InH1BOkydPjhtvvLGuywD+67TTTovf/e53dV0G0LBdYssQAAAkTCAAAICECQQAAJAwgQAAABImEAAAQMIEAgAASJhAAAAACRMIAAAgYQIBAAAkTCAAAICECQQAAJAwgQAAABImEAAAQMIEAgAASJhAAAAACRMIAAAgYQIBAAAkTCAAAICECQQAAJAwgQAAABImEAAAQMIEAgAASJhAAAAACRMIAAAgYQIBAAAkTCAAAICECQQAAJAwgQAAABImEAAAQMIEAgAASJhAAAAACRMIAAAgYQIBAAAkTCAAAICECQQAAJAwgQAAABImEAAAQMIEAgAASJhAAAAACRMIAAAgYQIBAAAkTCAAAICECQQAAJAwgQAAABImEAAAQMIEAgAASJhAAAAACRMIAAAgYQIBAAAkTCAAAICE5dV1AUDD0axZs2jVqlVdlwH8V9OmTeu6BKARyCkpKSmp6yIAAIA6cYktQwAAkDCBAAAAEiYQAABAwgQCAABImEAAAAAJEwgAACBhAgEAACRMIAAAgIQJBAAAkDCBAAAAEvb/AU3MGqS6RY4CAAAAAElFTkSuQmCC","text/plain":"<IPython.core.display.Image object>"},"metadata":{}}]},{"cell_type":"code","source":"history = model.fit(train_data, validation_data=valid_data, epochs=10)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:21:51.385489Z","iopub.execute_input":"2024-06-16T13:21:51.386361Z","iopub.status.idle":"2024-06-16T13:21:53.763428Z","shell.execute_reply.started":"2024-06-16T13:21:51.386321Z","shell.execute_reply":"2024-06-16T13:21:53.762067Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":53,"outputs":[{"name":"stdout","text":"Epoch 1/10\n\u001b[1m 21/263\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 101ms/step - accuracy: 0.8749 - loss: 0.1778","output_type":"stream"},{"name":"stderr","text":"\nKeyboardInterrupt\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nplt.plot([i for i in range(0, history.params['epochs'])], history.history['loss'], label='train_loss')\nplt.plot([i for i in range(0, history.params['epochs'])], history.history['val_loss'], label='val_loss')\nplt.xlabel(\"epochs\")\nplt.ylabel(\"loss\")\nplt.legend()\n","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:19:51.884639Z","iopub.execute_input":"2024-06-16T13:19:51.885065Z","iopub.status.idle":"2024-06-16T13:19:52.202015Z","shell.execute_reply.started":"2024-06-16T13:19:51.885031Z","shell.execute_reply":"2024-06-16T13:19:52.200758Z"},"trusted":true},"execution_count":49,"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"<matplotlib.legend.Legend at 0x7defb4a1cc10>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"plt.plot([i for i in range(0, history.params['epochs'])], history.history['accuracy'], label='train_acc')\nplt.plot([i for i in range(0, history.params['epochs'])], history.history['val_accuracy'], label='val_acc')\nplt.legend()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:20:16.785018Z","iopub.execute_input":"2024-06-16T13:20:16.785828Z","iopub.status.idle":"2024-06-16T13:20:16.992179Z","shell.execute_reply.started":"2024-06-16T13:20:16.785787Z","shell.execute_reply":"2024-06-16T13:20:16.990966Z"},"trusted":true},"execution_count":51,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"**TEST DATASET PREDICTION**","metadata":{}},{"cell_type":"code","source":"test_df = pd.read_csv('/kaggle/input/multilabel-classification-dataset/test.csv')","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:22:15.894456Z","iopub.execute_input":"2024-06-16T13:22:15.894841Z","iopub.status.idle":"2024-06-16T13:22:16.128402Z","shell.execute_reply.started":"2024-06-16T13:22:15.894813Z","shell.execute_reply":"2024-06-16T13:22:16.127199Z"},"trusted":true},"execution_count":55,"outputs":[]},{"cell_type":"code","source":"test_preds = predict(model, test_df['TITLE'], test_df['ABSTRACT'])","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:22:16.937248Z","iopub.execute_input":"2024-06-16T13:22:16.937712Z","iopub.status.idle":"2024-06-16T13:22:23.289993Z","shell.execute_reply.started":"2024-06-16T13:22:16.937675Z","shell.execute_reply":"2024-06-16T13:22:23.288605Z"},"trusted":true},"execution_count":56,"outputs":[{"name":"stdout","text":"(8989, 100) (8989, 200)\n\u001b[1m281/281\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 19ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"results = pd.DataFrame(test_preds, columns=label_tags)\nfor i in label_tags:\n    results[i] = results[i].apply(lambda x: 1 if x >=0.5 else 0)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:23:48.469200Z","iopub.execute_input":"2024-06-16T13:23:48.469599Z","iopub.status.idle":"2024-06-16T13:23:48.532333Z","shell.execute_reply.started":"2024-06-16T13:23:48.469566Z","shell.execute_reply":"2024-06-16T13:23:48.530957Z"},"trusted":true},"execution_count":62,"outputs":[]},{"cell_type":"code","source":"results['TITLE'] = test_df['TITLE']\nresults['ABSTRACT'] = test_df['ABSTRACT']","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:24:26.715822Z","iopub.execute_input":"2024-06-16T13:24:26.716857Z","iopub.status.idle":"2024-06-16T13:24:26.724782Z","shell.execute_reply.started":"2024-06-16T13:24:26.716819Z","shell.execute_reply":"2024-06-16T13:24:26.723458Z"},"trusted":true},"execution_count":64,"outputs":[]},{"cell_type":"code","source":"results","metadata":{"execution":{"iopub.status.busy":"2024-06-16T13:24:29.878830Z","iopub.execute_input":"2024-06-16T13:24:29.879253Z","iopub.status.idle":"2024-06-16T13:24:29.899151Z","shell.execute_reply.started":"2024-06-16T13:24:29.879221Z","shell.execute_reply":"2024-06-16T13:24:29.897876Z"},"trusted":true},"execution_count":65,"outputs":[{"execution_count":65,"output_type":"execute_result","data":{"text/plain":"      Computer Science  Physics  Mathematics  Statistics  \\\n0                    0        0            0           1   \n1                    0        1            0           0   \n2                    1        0            0           0   \n3                    0        1            0           0   \n4                    1        0            0           0   \n...                ...      ...          ...         ...   \n8984                 1        0            0           0   \n8985                 0        0            1           0   \n8986                 1        0            0           0   \n8987                 1        0            0           1   \n8988                 0        0            1           1   \n\n      Quantitative Biology  Quantitative Finance  \\\n0                        0                     0   \n1                        0                     0   \n2                        0                     0   \n3                        0                     0   \n4                        0                     0   \n...                    ...                   ...   \n8984                     0                     0   \n8985                     0                     0   \n8986                     0                     0   \n8987                     0                     0   \n8988                     0                     0   \n\n                                                  TITLE  \\\n0     Closed-form Marginal Likelihood in Gamma-Poiss...   \n1     Laboratory mid-IR spectra of equilibrated and ...   \n2            Case For Static AMSDU Aggregation in WLANs   \n3     The $Gaia$-ESO Survey: the inner disk intermed...   \n4     Witness-Functions versus Interpretation-Functi...   \n...                                                 ...   \n8984  Supporting mixed-datatype matrix multiplicatio...   \n8985        An axiomatic basis for Blackwell optimality   \n8986  GeneVis - An interactive visualization tool fo...   \n8987  Quantifying the causal effect of speed cameras...   \n8988                      Cube-magic labelings of grids   \n\n                                               ABSTRACT  \n0       We present novel understandings of the Gamma...  \n1       Meteorites contain minerals from Solar Syste...  \n2       Frame aggregation is a mechanism by which mu...  \n3       Milky Way open clusters are very diverse in ...  \n4       Proving that a cryptographic protocol is cor...  \n...                                                 ...  \n8984    We approach the problem of implementing mixe...  \n8985    In the theory of Markov decision processes (...  \n8986    GeneVis is a web-based tool to visualize com...  \n8987    This paper quantifies the effect of speed ca...  \n8988    We show that the vertices and edges of a $d$...  \n\n[8989 rows x 8 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Computer Science</th>\n      <th>Physics</th>\n      <th>Mathematics</th>\n      <th>Statistics</th>\n      <th>Quantitative Biology</th>\n      <th>Quantitative Finance</th>\n      <th>TITLE</th>\n      <th>ABSTRACT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Closed-form Marginal Likelihood in Gamma-Poiss...</td>\n      <td>We present novel understandings of the Gamma...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Laboratory mid-IR spectra of equilibrated and ...</td>\n      <td>Meteorites contain minerals from Solar Syste...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Case For Static AMSDU Aggregation in WLANs</td>\n      <td>Frame aggregation is a mechanism by which mu...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>The $Gaia$-ESO Survey: the inner disk intermed...</td>\n      <td>Milky Way open clusters are very diverse in ...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Witness-Functions versus Interpretation-Functi...</td>\n      <td>Proving that a cryptographic protocol is cor...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>8984</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Supporting mixed-datatype matrix multiplicatio...</td>\n      <td>We approach the problem of implementing mixe...</td>\n    </tr>\n    <tr>\n      <th>8985</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>An axiomatic basis for Blackwell optimality</td>\n      <td>In the theory of Markov decision processes (...</td>\n    </tr>\n    <tr>\n      <th>8986</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>GeneVis - An interactive visualization tool fo...</td>\n      <td>GeneVis is a web-based tool to visualize com...</td>\n    </tr>\n    <tr>\n      <th>8987</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Quantifying the causal effect of speed cameras...</td>\n      <td>This paper quantifies the effect of speed ca...</td>\n    </tr>\n    <tr>\n      <th>8988</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Cube-magic labelings of grids</td>\n      <td>We show that the vertices and edges of a $d$...</td>\n    </tr>\n  </tbody>\n</table>\n<p>8989 rows × 8 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}